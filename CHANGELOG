
1.0.9 :
copierTexte(str) -> str.copyToClipboard()
truncateString(str, ...) -> str.truncateString(...)

NumberValue.isNumeric(str) -> str.isNumeric()
NumberValue.format(number, nbDecimal, locale) -> number.format(nbDecimal, locale) OU Number.format(number, nbDecimal, locale)
NumberValue.formatCurrency(montant, currency, nbDecimal, locale) -> montant.formatCurrency(currency, nbDecimal, locale)
NumberValue.formatPercent(number, nbDecimal, locale) -> number.formatPercent(nbDecimal, locale)
NumberValue.random(min, max) -> Number.random(min, max)
NumberValue.padLeft2(n) -> n.padLeft2()
NumberValue.roundDecimal(nombre, precision) -> nombre.roundDecimal(precision)

nombre.formatAsString(locale, minimumFractionDigits) -> nombre.format(nbDecimal, locale)
montant.formatAsCurrency(locale, currency, nbFractionDigits) -> montant.formatCurrency(currency, nbDecimal, locale)
number.formatAsPercent(locale, minimumFractionDigits) -> number.formatPercent(nbDecimal, locale)

constante COUNTRIES_LIST -> Country.getCountryList()
activateTab(...) -> Navigation.activateTab(...)

renameKeys(...) -> Object.renameKeys(...)
renameKeysByCallback(...) -> Object.renameKeysByCallback(...)
getValuesByKeyInArrayOfArrays(...) -> Array.getValuesByKeyInArrayOfArrays(...)
getValuesByKeyInArrayOfArrays(array, ...) -> array.getValuesByKeyInArrayOfArrays(...)

hasGetUserMedia() -> non remplacé

paginationAsList(...) -> Pagination.paginate(...)

getDateObjectSelected(lien) -> getSelectedDate(lien.closest('.form-group')
selectFormDate(lien) -> setSelectedDate(lien.closest('.form-group')
majSelectPeriode() / majSelectCompare() -> updatePeriodSelect(form)

let URL_REFRESH = ... -> HTTPRequest.setRefreshTokenUrl(URL_REFRESH)
let _httpHeaders = {...} -> HTTPRequest.setHeader(key, value);
let httpHeaders = {...} -> HTTPRequest.setHeader(key, value);
remplacer l'utilisation des variables httpHeaders / _httpHeaders par HTTPRequest.getHeaders()

FlashMessage.displayRequestFailure(status, exception, modal) -> FlashMessage.displayError(labelErrorOccured, modal)
FormHelper.logRequestFailure(status, exception) -> HTTPRequest.logJqueryRequestFailure(jqxhr, status, exception) (le log de l'erreur est devenu inutile car fait de base dans la classe HTTPRequest)

Location.checkCoordinates(...) -> GeographicCoordinates.check(...) (car Location est déjà défini en javascript natif)

FormHelper.getFormErrorTextBis(...) -> FormHelper.getFormErrorText(...)
FormHelper.displayFormErrorsFromXhr(form, btnSubmit, xhr) -> FormHelper.displayFormErrors(form, btnSubmit, xhr.responseJSON)

1.0.35 :
ajout méthode HTTPRequest.init() (charge le polyfill de fetch)